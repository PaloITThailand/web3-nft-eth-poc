trigger:
- main

pool:
  vmImage: ubuntu-latest


steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'
  workingDirectory: $(Build.SourcesDirectory)

- script: |
    npm install --global yarn
  displayName: 'yarn install'
  workingDirectory: $(Build.SourcesDirectory)

- script: |
    yarn install
  displayName: 'npm build'
  workingDirectory: $(Build.SourcesDirectory)

- script: |
    yarn install
  displayName: 'npm build'
  workingDirectory: $(Build.SourcesDirectory)/frontend

# container: node:18-bullseye-slim@sha256:f32c970581a901560815b9af1aebbc164c86b9be922dda3b9f3b65f653e61776

# variables:
# - name: poc-directory
#   value: .

# steps:
# # Set up and run hardhat backend tests
# - script: |
#     yarn install
#   displayName: 'Hardhat: Install hardhat dependencies'
#   workingDirectory: $(poc-directory)

# - script: |
#     npx hardhat compile
#   displayName: 'Hardhat: Compile smart contracts'
#   workingDirectory: $(poc-directory)

# # TODO: When finished, change minimum coverage to 100% in package.json
# - script: |
#     npx hardhat test
#   displayName: 'Hardhat: Test smart contracts'
#   workingDirectory: $(poc-directory)

# # Set up and run e2e tests

# - script: |
#     yarn install
#   displayName: 'Frontend: Install dependencies'
#   workingDirectory: $(poc-directory)/frontend

# - script: |
#     npm i ipfs
#   displayName: 'IPFS: Install IPFS agent'
#   workingDirectory: $(poc-directory)

# - script: |
#     nohup npx hardhat node & > hardhat_node.log &
#   displayName: 'Hardhat: Run local ethereum node'
#   workingDirectory: $(poc-directory)

# - script: |
#     npx jsipfs init
#     npx jsipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin "[\"*\"]"
#     npx jsipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '["PUT", "POST", "GET"]'
#     nohup npx jsipfs daemon & > jsipfs_daemon.log &
#   displayName: 'IPFS: Initialize node'
#   workingDirectory: $(poc-directory)

# - script: |
#     npx hardhat --network localhost run scripts/deploy_palonft.js
#   displayName: 'Hardhat: Deploy NFT smart contract to local ethereum network'
#   workingDirectory: $(poc-directory)
